\ настройки генератора
S" INCLUDE toeliner FILE" TYPE CR

REQUIRE  HYPE ~disa\~day\hype3\hype3.f
REQUIRE PriborPassport priborpassport.f
 REQUIRE  tabl_kalibr  ~disa/kalibr_hype.f

CLASS TOE7761

\ CELL DEFS clas_generator
PriborPassport DEFS  Passport
 CELL DEFS generator
CELL DEFS kalibrovka 

\ 128 DEFS patch


: Start 
 || D:  str_prib   D: etalon  D: flag  ||
S" TOE7761 connecting.." TYPE CR	
  S" .\prib\TOE7761/haracter.spf"  
 INCLUDE-PROBE IF ."   ERROR haracteristic pribor not found  " CR -1 flag ! THEN \ считываем характеристики прибора 
  PriborPassport_info Passport PriborPassport CMOVE \ копируем свежесчитанные данные по прибору 
  Passport NamePribor 1 +  Passport NamePribor C@  \ название
  STR>S
\  " *pribor*"  
  etalon !

PriborPassport_info interface	   DUP 1+ SWAP C@   EVALUATE  \ gpib/comport/ethernet/...
PriborPassport_info Nameinterface  DUP 1+  SWAP C@    EVALUATE   NewObj generator !
S" TOE7761 opened.." TYPE CR	

PriborPassport_info interface_data1   DUP 1 + SWAP C@ STR>S  
PriborPassport_info interface_data2   DUP 1 + SWAP C@ STR>S
 generator @ ^ open
\ STYPE ."  " STYPE ."  "
."  =interface data " 


  " *IDN?"  S+CRLF  generator @ ^  write  
    generator @ ^ read   str_prib !     
 str_prib @ STR@ etalon @ STR@ WildCMP-U  
 IF
 	 "  TOE7761 not found. FIND:  "  >R str_prib @ R@ S+  R> str_prib !
	  str_prib @  TO_ERROR_PROG_BUFER 
	  ." error: " TYPE_ERROR_PROG_BUFER
	      	 -1 flag ! 
 ELSE  
	str_prib @ STYPE 0 flag ! 
 THEN
  etalon   @ STRFREE 
tabl_kalibr NewObj kalibrovka   !

 kalibrovka  @  	S" .\prib\TOE7761/data.kal"   ERR-INCLUDE-PROBE 
		IF 	0 flag ! 
		ELSE ."  kalibrovka:  " kalibrovka   @ ^ SeeDatas  THEN CR
flag @
S"  TOE7761  connect complite.." TYPE CR	
;


: GetStatus    ( flag )
 " :stat:que? " S+CRLF generator @ ^ write   
 200 PAUSE 	generator @ ^ read  STRFREE
; 

: MinMax  ( float -- float flag )
	kalibrovka @ ^ MinMax 
;

\ установить частоту
: SetFreq    
 \ kalibrovka @ ^ MinMax DROP

>FNUM  " FREQ " DUP >R  STR+  R>  S+CRLF   
 generator   @ ^   write 
 GetStatus
  ; 
 
\ установить уровень
: SetLevel    
dBm->V >FNUM  " :VOLT " DUP >R  STR+ R>  S+CRLF 
generator @ ^ write   
 " OUTP:STAT ON" S+CRLF generator @ ^ write 
  GetStatus
; 


\ : AM  ( 1-on, 0- off ) IF " AM: I" ELSE " AM: OF" THEN   S+CRLF  
\ DUP STR@ TYPE ."  "
\ generator @ ^  write  100 PAUSE ;

: Stop
" OUTP:STAT OFF" generator @ ^ write 
 100 PAUSE
 generator @ ^    close \ закрыли после использования
 generator @ FreeObj
;

\ : PULSE  ( 1-on, 0- off ) IF " SOUR:PULM:STAT ON" ELSE " SOUR:PULM:STAT OFF" THEN   S+CRLF  generator @ ^  write  100 PAUSE ;


 : Off 
  " OUTP:STAT OFF" S+CRLF  generator @ ^ write \
; 
 : On \ " LEVEL on" S+CRLF  generator @ ^ write  
 " OUTP:STAT ON" S+CRLF generator @ ^ write 
; 



;CLASS  TOE7761
S"   TOE7761 COMPLITE " TYPE CR